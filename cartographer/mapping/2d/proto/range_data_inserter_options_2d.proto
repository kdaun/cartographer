// Copyright 2016 The Cartographer Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/any.proto";

package cartographer.mapping.proto;

message RangeDataInserterOptions2D {
  RangeDataInserterOptions2DProbabilityGrid probability_grid = 1;
  RangeDataInserterOptions2DTSDF tsdf = 2;
}

message RangeDataInserterOptions2DProbabilityGrid {
  // Probability change for a hit (this will be converted to odds and therefore
  // must be greater than 0.5).
  double hit_probability = 1;

  // Probability change for a miss (this will be converted to odds and therefore
  // must be less than 0.5).
  double miss_probability = 2;

  // If 'false', free space will not change the probabilities in the occupancy
  // grid.
  bool insert_free_space = 3;
}

enum RangeDataInserter2DTSDFType {
  CONSTANT_WEIGHT = 0;
  QUADRATIC_WEIGHT = 1;
}

message RangeDataInserterOptions2DTSDF {
  RangeDataInserter2DTSDFType range_data_inserter_type = 1;
  // Distance in front of the wall within the signed distance function is
  // evaluation
  double truncation_distance = 2;
  // Distance behind the range observation where weight reduction starts
  double behind_surface_distance = 3;
  // Factor scaling the update weight
  double update_weight = 4;
  // Maximum weight that can be stored in a cell
  double maximum_weight = 5;
}
